{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","actions/backlogActions.js","NavBar.js","Footer.js","validation/is-Empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/backlogReducer.js","reducers/index.js","store.js","TextFieldGroup.js","LoginForm.js","RegisterForm.js","Home.js","backlogComponent/ItemComponent.js","backlogComponent/BacklogSortable.js","backlogComponent/Backlog.js","CurrentSprint.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","setBacklogLoading","NavBar","onLogoutClick","e","preventDefault","_this","props","clearBacklog","window","location","href","_this$props$auth","this","auth","isAuthenticated","user","authLinks","react_default","a","createElement","className","id","NavLink","to","sub","onClick","userLinks","Link","data-toggle","data-target","Component","connect","state","Footer","Date","getFullYear","isEmpty","value","undefined","Object","keys","length","trim","initialState","items","loading","combineReducers","arguments","action","objectSpread","errors","backlog","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","TextFieldGroup","_ref","name","placeholder","label","error","info","onChange","disabled","htmlFor","classnames","is-invalid","defaultProps","LoginForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillReceiveProps","nextProps","history","push","setState","handleChange","defineProperty","target","handleSubmit","username","password","loginUser","noValidate","onSubmit","bind","src","alt","width","height","src_TextFieldGroup","userData","post","then","res","data","setItem","concat","jwt_decode","catch","err","response","RegisterForm","newUser","email","registerUser","withRouter","Home","ItemComponent","onButtonClick","onDeleteItem","parseInt","_this2","_this$props","index","SortableItem","SortableElement","ItemComponent_ItemComponent","SortableList","SortableContainer","_ref2","map","key","BacklogSortable","removeBacklogTask","onSortEnd","_ref3","oldIndex","newIndex","sortedItems","arrayMove","tasks","sortBacklogItems","BacklogComponent","sortdItems","orderBacklogItems","removeTask","getBacklogItems","_this$props$backlog","style","textAlign","backlogComponent_BacklogSortable","get","delete","params","CurrentSprint","Profile","smToken","currentTime","now","exp","App","es","BrowserRouter","src_NavBar","Route","exact","path","component","Backlog","src_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c510c82.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }else{\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios.post(\"api/auth/register\", userData)\r\n        .then(res => {\r\n            history.push('/login');\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const loginUser = (userData) => dispatch => {\r\n    axios.post(\"api/auth/login\", userData)\r\n        .then(res => {\r\n            const { token } = res.data;\r\n            localStorage.setItem('smToken', `Bearer ${token}`);\r\n            setAuthToken(token);\r\n            const decoded = jwt_decode(token);\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem('smToken');\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n}","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const GET_BACKLOG_ITEMS = 'GET_BACKLOG_ITEMS';\r\nexport const BACKLOG_LOADING = 'BACKLOG_LOADING';\r\nexport const CLEAR_BACKLOG = 'CLEAR_BACKLOG';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\n","import axios from 'axios';\r\nimport { GET_BACKLOG_ITEMS, BACKLOG_LOADING, CLEAR_BACKLOG } from './types';\r\n\r\nexport const getBacklogItems = () => dispatch => {\r\n    dispatch(setBacklogLoading());\r\n    axios.get(\"api/task/getbacklogtasks\")\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_BACKLOG_ITEMS,\r\n            payload: res.data\r\n        });\r\n    })\r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_BACKLOG_ITEMS,\r\n            payload: {}\r\n        })\r\n    );\r\n}\r\n\r\nexport const removeTask = (id) => dispatch => {\r\n    dispatch(setBacklogLoading());\r\n    axios.delete(\"api/task\", {\r\n        params: { id: id }\r\n        })\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_BACKLOG_ITEMS,\r\n            payload: res.data\r\n        });\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: GET_BACKLOG_ITEMS,\r\n            payload: {}\r\n        })\r\n    });\r\n};\r\n\r\nexport const orderBacklogItems = (sortedItems) => dispatch => {\r\n    dispatch(setBacklogLoading());\r\n    axios.post(\"api/task/sortedbacklog\", sortedItems)\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_BACKLOG_ITEMS,\r\n            payload: res.data\r\n        });\r\n    })\r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_BACKLOG_ITEMS,\r\n            payload: {}\r\n        })\r\n    );\r\n};\r\n\r\nexport const setBacklogLoading = () => {\r\n    return {\r\n        type: BACKLOG_LOADING\r\n    }\r\n}\r\n\r\nexport const clearBacklog = () => {\r\n    return {\r\n        type: CLEAR_BACKLOG\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from './actions/authActions';\r\nimport { clearBacklog } from './actions/backlogActions';\r\n\r\nclass NavBar extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.clearBacklog();\r\n    this.props.logoutUser();\r\n    window.location.href = '/';\r\n  }\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n    const authLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          {/* <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/backlog\">Backlog</NavLink>\r\n          </li> */}\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/currentSprint\">Current Sprint</NavLink>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/profile\">{user.sub}</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a href=\"\" onClick={this.onLogoutClick} className=\"nav-link\" to=\"/login\">\r\n              <span className=\"oi oi-account-logout\"></span>{' '}Logout\r\n          </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/register\">Sign Up</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n    \r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">Scrum Manager</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          {isAuthenticated ? authLinks : userLinks}\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser, clearBacklog })(NavBar);\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n    Copyright &copy; {new Date().getFullYear()} Scrum Manager\r\n  </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","const isEmpty = (value) => \r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n    ","import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from '../validation/is-Empty';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type){       \r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS } from '../actions/types';\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type){       \r\n        case GET_ERRORS: \r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_BACKLOG_ITEMS, BACKLOG_LOADING, CLEAR_BACKLOG } from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: null,\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type){   \r\n        case BACKLOG_LOADING:\r\n            return {\r\n                ...state,\r\n                items: [],\r\n                loading: true\r\n            }    \r\n        case GET_BACKLOG_ITEMS: \r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_BACKLOG:\r\n            return {\r\n                ...state,\r\n                items: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport backlogReducer from './backlogReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n    backlog: backlogReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    compose(applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport default store;","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n    id,\r\n    name,\r\n    placeholder,\r\n    value,\r\n    label,\r\n    error,\r\n    info,\r\n    type,\r\n    onChange,\r\n    disabled\r\n    \r\n}) => {\r\n    return (\r\n        <div>\r\n             <label \r\n                htmlFor={id} \r\n                className=\"sr-only\">{label}\r\n            </label>\r\n            <input \r\n                type={type} \r\n                id={id} \r\n                name={name}\r\n                onChange={onChange} \r\n                value={value} \r\n                className={classnames(\"form-control\", {\r\n                    'is-invalid': error\r\n                })} \r\n                placeholder={placeholder} \r\n            />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && (<div className=\"invalid-feedback\">{error}</div>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    disabled: PropTypes.string\r\n} \r\n\r\nTextFieldGroup.defaultProps = {\r\n    type: 'text',\r\n}\r\n    \r\nexport default TextFieldGroup;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from './actions/authActions';\r\nimport TextFieldGroup from './TextFieldGroup';\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(user);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"landing landing-background-login\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"form-main text-center\">\r\n              <form noValidate className=\"form-signin\" onSubmit={this.handleSubmit.bind(this)}>\r\n                <img className=\"mb-4\" src=\"dist/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                <TextFieldGroup\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.username}\r\n                  placeholder=\"Name\"\r\n                  error={errors.username}\r\n                />\r\n                <TextFieldGroup\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.password}\r\n                  placeholder=\"Password\"\r\n                  error={errors.password}\r\n                />\r\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n              </form>\r\n            </div></div></div></div>\r\n    )\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(LoginForm);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from './actions/authActions';\r\nimport TextFieldGroup from './TextFieldGroup';\r\n\r\nclass RegisterForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.auth.isAuthenticated) {\r\n          this.props.history.push('/backlog');\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    }  \r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"landing landing-background-register\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"form-main text-center\">\r\n                            <form noValidate className=\"form-signin\" onSubmit={this.handleSubmit}>\r\n                                <img className=\"mb-4\" src=\"dist/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n                                <h1 className=\"h3 mb-3 font-weight-normal\">Please sign up</h1>\r\n                                <TextFieldGroup \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    onChange={this.handleChange} \r\n                                    value={this.state.username} \r\n                                    placeholder=\"Name\" \r\n                                    error={errors.username}                                    \r\n                                />\r\n                                <TextFieldGroup \r\n                                    type=\"email\" \r\n                                    id=\"email\" \r\n                                    onChange={this.handleChange} \r\n                                    value={this.state.email} \r\n                                    placeholder=\"Email\" \r\n                                    error={errors.email}                                    \r\n                                />\r\n                                <TextFieldGroup \r\n                                    type=\"password\" \r\n                                    id=\"password\" \r\n                                    onChange={this.handleChange} \r\n                                    value={this.state.password} \r\n                                    placeholder=\"Password\" \r\n                                    error={errors.password}                                    \r\n                                />\r\n                                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign up</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(RegisterForm));","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing landing-background-home\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Scrum Manager\r\n            </h1>\r\n                <p className=\"lead\">Great and free tool for developers to smart manage their work</p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">Sign Up</Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">Login</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ItemComponent extends Component {\r\n\r\n    onButtonClick = (id) => {\r\n        const { onDeleteItem } = this.props;\r\n        onDeleteItem(parseInt(id));\r\n    }\r\n    render() {\r\n        const { index, value, id } = this.props;\r\n        return (\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-light\">\r\n                {value}\r\n                <span className=\"badge badge-primary badge-pill\">{index}</span>\r\n\r\n                <div>\r\n                    <button onClick={() => this.onButtonClick(id)} type=\"button\" className=\"btn btn-outline-info btn-sm\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\r\nimport ItemComponent from './ItemComponent';\r\nimport '.././App.css'\r\n\r\nconst SortableItem = SortableElement(({ index, value, onDeleteItem, id }) => <ItemComponent index={index} value={value} onDeleteItem={onDeleteItem} id={id} />);\r\nconst SortableList = SortableContainer(({ items, onDeleteItem }) => {\r\n    return (\r\n\r\n                    <ul className=\"list-group\">\r\n                        {items.map((value, index) => (\r\n                            <SortableItem key={`item-${index}`} index={index} value={value.name} onDeleteItem={onDeleteItem} id={value.id} />\r\n                        ))}\r\n                    </ul>\r\n               \r\n    );\r\n});\r\n\r\nclass BacklogSortable extends Component {\r\n    onDeleteItem = (id) => {\r\n        this.props.removeBacklogTask(id);\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const { items } = this.props;\r\n        const sortedItems = arrayMove(items.tasks, oldIndex, newIndex);\r\n        this.props.sortBacklogItems(sortedItems);\r\n    };\r\n\r\n    render() {\r\n        const { items } = this.props;\r\n            return <SortableList\r\n                items={items.tasks}\r\n                onSortEnd={this.onSortEnd}\r\n                onDeleteItem={this.onDeleteItem} />;\r\n        \r\n    }\r\n}\r\n\r\nexport default BacklogSortable;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getBacklogItems, orderBacklogItems, removeTask } from '../actions/backlogActions';\r\nimport BacklogSortable from './BacklogSortable';\r\n\r\nclass BacklogComponent extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n        this.props.getBacklogItems();\r\n    }\r\n\r\n    sortBacklogItems = (sortdItems) => {\r\n        this.props.orderBacklogItems(sortdItems);\r\n    }\r\n\r\n    removeBacklogTask = (id) => {\r\n        this.props.removeTask(id);\r\n    }\r\n\r\n    render() {\r\n        const { items, loading } = this.props.backlog;\r\n        return (\r\n            <div className=\"landing landing-background-backlog\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <h1 style={{ textAlign: 'center' }}>Main Backlog</h1>\r\n                    <div className=\"container\">{items != null && items.tasks != null && !loading ?\r\n                        (\r\n                            <BacklogSortable\r\n                                items={items}\r\n                                sortBacklogItems={this.sortBacklogItems}\r\n                                removeBacklogTask={this.removeBacklogTask}\r\n                            />\r\n                        ) : (\r\n                            <div className=\"loader\"></div>\r\n                        )}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBacklogComponent.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklogItems: PropTypes.func.isRequired,\r\n    orderBacklogItems: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    backlog: state.backlog\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklogItems, orderBacklogItems, removeTask })(BacklogComponent);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CurrentSprint extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing landing-background-currentSprint\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1>Here will be board with current task for users</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCurrentSprint.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(CurrentSprint);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Profile extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        const { user } = this.props.auth;\r\n\r\n        return (\r\n            <div className=\"landing landing-background-profile\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1>User info</h1>\r\n                                <h3>{user.sub}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(Profile);","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport Footer from './Footer';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport { setCurrentUser, logoutUser } from './actions/authActions';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport LoginForm from './LoginForm';\r\nimport RegisterForm from './RegisterForm';\r\nimport Home from './Home';\r\nimport Backlog from './backlogComponent/Backlog';\r\nimport CurrentSprint from './CurrentSprint';\r\nimport Profile from './Profile';\r\nimport './App.css';\r\n\r\nif(localStorage.smToken) {\r\n  setAuthToken(localStorage.smToken);\r\n  const decoded = jwt_decode(localStorage.smToken);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  const currentTime = Date.now() / 1000;\r\n  if(decoded.exp < currentTime){\r\n    store.dispatch(logoutUser());\r\n    window.location.href = '/login';\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={ store } >\r\n        <BrowserRouter>\r\n        <div>\r\n          <NavBar/>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/register\" component={RegisterForm} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n          <Route exact path=\"/backlog\" component={Backlog} />\r\n          <Route exact path=\"/currentSprint\" component={CurrentSprint} />\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}