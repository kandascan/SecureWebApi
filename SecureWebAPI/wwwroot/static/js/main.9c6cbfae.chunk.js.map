{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","NavBar.js","Footer.js","validation/is-Empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","LoginForm.js","RegisterForm.js","Home.js","backlogComponent/ItemComponent.js","backlogComponent/Backlog.js","CurrentSprint.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","NavBar","onLogoutClick","e","preventDefault","_this","props","window","location","href","_this$props$auth","this","auth","isAuthenticated","user","authLinks","react_default","a","createElement","className","id","NavLink","to","sub","onClick","userLinks","Link","data-toggle","data-target","Component","connect","state","Footer","Date","getFullYear","isEmpty","value","undefined","Object","keys","length","trim","initialState","combineReducers","arguments","action","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","LoginForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillReceiveProps","nextProps","history","push","setState","username","password","defineProperty","target","loginUser","noValidate","onSubmit","handleSubmit","bind","src","alt","width","height","htmlFor","onChange","handleChange","classnames","is-invalid","placeholder","autoFocus","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","RegisterForm","newUser","email","registerUser","withRouter","Home","ItemComponent","onButtonClick","v","onDeleteItem","_this2","_this$props","index","console","log","SortableItem","SortableElement","_ref","ItemComponent_ItemComponent","SortableList","SortableContainer","_ref2","items","style","textAlign","map","key","concat","BacklogComponent","newItems","filter","item","onSortEnd","_ref3","oldIndex","newIndex","arrayMove","CurrentSprint","Profile","smToken","currentTime","now","exp","App","es","BrowserRouter","src_NavBar","Route","exact","path","component","Backlog","src_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c6cbfae.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }else{\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios.post(\"api/auth/register\", userData)\r\n        .then(res => {\r\n            history.push('/login');\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const loginUser = (userData) => dispatch => {\r\n    axios.post(\"api/auth/login\", userData)\r\n        .then(res => {\r\n            const { token } = res.data;\r\n            localStorage.setItem('smToken', token);\r\n            setAuthToken(token);\r\n            const decoded = jwt_decode(token);\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem('smToken');\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n}","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from './actions/authActions';\r\n\r\nclass NavBar extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    window.location.href = '/';\r\n  }\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n    const authLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          {/* <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/backlog\">Backlog</NavLink>\r\n          </li> */}\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/currentSprint\">Current Sprint</NavLink>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/profile\">{user.sub}</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a href=\"\" onClick={this.onLogoutClick} className=\"nav-link\" to=\"/login\">\r\n              <span className=\"oi oi-account-logout\"></span>{' '}Logout\r\n          </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/register\">Sign Up</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n    \r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">Scrum Manager</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          {isAuthenticated ? authLinks : userLinks}\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(NavBar);\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n    Copyright &copy; {new Date().getFullYear()} Scrum Manager\r\n  </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","const isEmpty = (value) => \r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n    ","import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from '../validation/is-Empty';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type){       \r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS } from '../actions/types';\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type){       \r\n        case GET_ERRORS: \r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    compose(applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from './actions/authActions';\r\nimport classnames from 'classnames';\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {}\r\n    };\r\n  }  \r\n\r\n  componentDidMount() {\r\n    if(this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if(nextProps.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n    if(nextProps.errors){\r\n        this.setState({\r\n            errors: nextProps.errors\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange(e){\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();    \r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(user);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"landing landing-background-login\">\r\n      <div className=\"dark-overlay landing-inner text-light\">\r\n        <div className=\"container\">\r\n      <div className=\"form-main text-center\">\r\n        <form noValidate className=\"form-signin\" onSubmit={this.handleSubmit.bind(this)}>\r\n            <img className=\"mb-4\" src=\"dist/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n            <label htmlFor=\"username\" className=\"sr-only\">User name</label> {/*utworzyc nowy komponent dla labela i inputa */}\r\n            <input type=\"text\" id=\"username\" onChange={this.handleChange.bind(this)} value={this.state.username} className={classnames(\"form-control\", {\r\n              'is-invalid' : errors.username\r\n            })} placeholder=\"Name\" autoFocus/>  \r\n            {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\r\n            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange.bind(this)} value={this.state.password} className={classnames(\"form-control\", {\r\n              'is-invalid' : errors.password\r\n            })} placeholder=\"Password\" />\r\n            {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n            {/* <div className=\"checkbox mb-3\">\r\n                <label>\r\n                <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n                </label>\r\n            </div> */}\r\n            <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n            {/* <p className=\"mt-5 mb-3 text-muted\">&copy; 2018-2019</p> */}\r\n        </form>\r\n        </div></div></div></div>\r\n    )\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(LoginForm);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from './actions/authActions';\r\n\r\nclass RegisterForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.auth.isAuthenticated) {\r\n          this.props.history.push('/backlog');\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    }  \r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"landing landing-background-register\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"form-main text-center\">\r\n                            <form noValidate className=\"form-signin\" onSubmit={this.handleSubmit}>\r\n                                <img className=\"mb-4\" src=\"dist/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n                                <h1 className=\"h3 mb-3 font-weight-normal\">Please sign up</h1>\r\n                                <label htmlFor=\"username\" className=\"sr-only\">User name</label> {/*utworzyc nowy komponent dla labela i inputa */}\r\n                                <input \r\n                                type=\"text\" \r\n                                id=\"username\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.username} \r\n                                className={classnames(\"form-control\", {\r\n                                    'is-invalid': errors.username\r\n                                })} \r\n                                placeholder=\"Name\" \r\n                                autoFocus />\r\n                                {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                                <label htmlFor=\"email\" className=\"sr-only\">Email address</label>\r\n                                <input \r\n                                type=\"email\" \r\n                                id=\"email\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.email} \r\n                                className={classnames(\"form-control\", {\r\n                                    'is-invalid': errors.email\r\n                                })} \r\n                                placeholder=\"Email address\" />\r\n                                {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n                                <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n                                <input \r\n                                type=\"password\" \r\n                                id=\"password\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.password} className={classnames(\"form-control\", {\r\n                                    'is-invalid': errors.password\r\n                                })} placeholder=\"Password\" />\r\n                                {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign up</button>\r\n                                {/* <p className=\"mt-5 mb-3 text-muted\">&copy; 2018-2019</p> */}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(RegisterForm));","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing landing-background-home\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Scrum Manager\r\n            </h1>\r\n                <p className=\"lead\">Great and free tool for developers to smart manage their work</p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">Sign Up</Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">Login</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ItemComponent extends Component {\r\n\r\n    onButtonClick = (v) => {\r\n        const { onDeleteItem } = this.props;\r\n        // console.log(v);\r\n        onDeleteItem(v);\r\n    }\r\n    render() {\r\n        const { index, value } = this.props;\r\n        console.log(this.props)\r\n        return (\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-light\">\r\n                {value}\r\n                <span className=\"badge badge-primary badge-pill\">{index}</span>\r\n\r\n                <div>\r\n                    <button onClick={() => this.onButtonClick(value)} type=\"button\" className=\"btn btn-outline-info btn-sm\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\r\nimport ItemComponent from './ItemComponent';\r\nimport '.././App.css'\r\nconst SortableItem = SortableElement(({ index, value, onDeleteItem }) => <ItemComponent index={index} value={value} onDeleteItem={onDeleteItem} />);\r\n\r\nconst SortableList = SortableContainer(({ items, onDeleteItem }) => {\r\n    return (\r\n        <div className=\"landing landing-background-backlog\">\r\n            <div className=\"dark-overlay landing-inner text-light\">\r\n            <h1 style={{textAlign: 'center'}}>Main Backlog</h1>\r\n\r\n                <div className=\"container\">\r\n                    <ul className=\"list-group\">\r\n                        {items.map((value, index) => (\r\n                            <SortableItem key={`item-${index}`} index={index} value={value} onDeleteItem={onDeleteItem} />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nclass BacklogComponent extends Component {\r\n    state = {\r\n        items: ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6'],\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    onDeleteItem = (id) => {\r\n        console.log(`Delete: ${id}`);\r\n        const newItems = this.state.items.filter(item => {\r\n            return item !== id\r\n        });\r\n        this.setState({\r\n            items: newItems\r\n        });\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        this.setState({\r\n            items: arrayMove(this.state.items, oldIndex, newIndex),\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <SortableList items={this.state.items} onSortEnd={this.onSortEnd} onDeleteItem={this.onDeleteItem} />;\r\n    }\r\n}\r\n\r\nBacklogComponent.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BacklogComponent);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CurrentSprint extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing landing-background-currentSprint\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1>Here will be board with current task for users</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCurrentSprint.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(CurrentSprint);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Profile extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        const { user } = this.props.auth;\r\n\r\n        return (\r\n            <div className=\"landing landing-background-profile\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1>User info</h1>\r\n                                <h3>{user.sub}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(Profile);","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport Footer from './Footer';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport LoginForm from './LoginForm';\nimport RegisterForm from './RegisterForm';\nimport Home from './Home';\nimport Backlog from './backlogComponent/Backlog';\nimport CurrentSprint from './CurrentSprint';\nimport Profile from './Profile';\nimport './App.css';\n\nif(localStorage.smToken) {\n  setAuthToken(localStorage.smToken);\n  const decoded = jwt_decode(localStorage.smToken);\n  store.dispatch(setCurrentUser(decoded));\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime){\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={ store } >\n        <BrowserRouter>\n        <div>\n          <NavBar/>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/register\" component={RegisterForm} />\n          <Route exact path=\"/login\" component={LoginForm} />\n          <Route exact path=\"/backlog\" component={Backlog} />\n          <Route exact path=\"/currentSprint\" component={CurrentSprint} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Footer />\n        </div>\n      </BrowserRouter>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}