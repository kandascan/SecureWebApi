{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","actions/backlogActions.js","NavBar.js","Footer.js","validation/is-Empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/backlogReducer.js","reducers/dictionaryReducer.js","reducers/index.js","store.js","TextFieldGroup.js","LoginForm.js","RegisterForm.js","Home.js","backlogComponent/ItemComponent.js","backlogComponent/BacklogSortable.js","backlogComponent/CreateTask.js","actions/dictionaryActions.js","backlogComponent/Backlog.js","CurrentSprint.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","getBacklogItems","setBacklogLoading","get","then","res","data","catch","err","toggleModal","NavBar","onLogoutClick","e","preventDefault","_this","props","clearBacklog","window","location","href","_this$props$auth","this","auth","isAuthenticated","user","authLinks","react_default","a","createElement","className","id","NavLink","to","sub","onClick","userLinks","Link","data-toggle","data-target","Component","connect","state","Footer","Date","getFullYear","isEmpty","value","undefined","Object","keys","length","trim","initialState","items","loading","modal","priorities","efforts","combineReducers","arguments","action","objectSpread","errors","backlog","dics","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","TextFieldGroup","_ref","name","placeholder","label","error","info","onChange","disabled","htmlFor","classnames","is-invalid","defaultProps","LoginForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillReceiveProps","nextProps","history","push","setState","handleChange","defineProperty","target","handleSubmit","username","password","loginUser","noValidate","onSubmit","bind","src","alt","width","height","src_TextFieldGroup","userData","post","setItem","concat","jwt_decode","response","RegisterForm","newUser","email","registerUser","withRouter","Home","ItemComponent","onButtonClick","onDeleteItem","parseInt","_this2","_this$props","index","SortableItem","SortableElement","ItemComponent_ItemComponent","SortableList","SortableContainer","_ref2","map","key","taskname","BacklogSortable","removeBacklogTask","onSortEnd","_ref3","oldIndex","newIndex","sortedItems","arrayMove","tasks","sortBacklogItems","CreateTask","toggle","_this$props$dics","getEffortsAndPriorities","newTask","description","effortId","effort","priorityId","priority","console","log","createTask","_this$props$dics2","ddlPriorities","priorityName","ddlEfforts","effortName","reactstrap_es","color","style","marginTop","float","isOpen","React","BacklogComponent","sortdItems","orderBacklogItems","removeTask","_this$props$backlog","backlogComponent_CreateTask","backlogComponent_BacklogSortable","delete","params","CurrentSprint","Profile","smToken","currentTime","now","exp","App","es","BrowserRouter","src_NavBar","Route","exact","path","component","Backlog","src_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdf6b1c2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }else{\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios.post(\"api/auth/register\", userData)\r\n        .then(res => {\r\n            history.push('/login');\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const loginUser = (userData) => dispatch => {\r\n    axios.post(\"api/auth/login\", userData)\r\n        .then(res => {\r\n            const { token } = res.data;\r\n            localStorage.setItem('smToken', `Bearer ${token}`);\r\n            setAuthToken(token);\r\n            const decoded = jwt_decode(token);\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem('smToken');\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n}","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const GET_BACKLOG_ITEMS = 'GET_BACKLOG_ITEMS';\r\nexport const BACKLOG_LOADING = 'BACKLOG_LOADING';\r\nexport const CLEAR_BACKLOG = 'CLEAR_BACKLOG';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\r\nexport const GET_PRIORITIES = 'GET_PRIORITIES';\r\nexport const GET_EFFORTS = 'GET_EFFORTS';\r\n","import axios from 'axios';\r\nimport { GET_BACKLOG_ITEMS, BACKLOG_LOADING, CLEAR_BACKLOG, GET_ERRORS, TOGGLE_MODAL } from './types';\r\n\r\nexport const getBacklogItems = () => dispatch => {\r\n    dispatch(setBacklogLoading());\r\n    axios.get(\"api/task/getbacklogtasks\")\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BACKLOG_ITEMS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_BACKLOG_ITEMS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const createTask = (newTask) => dispatch => {\r\n    dispatch(setBacklogLoading());\r\n    axios.post(\"api/task\", newTask)\r\n        .then(res => {\r\n            dispatch(toggleModal());\r\n            dispatch(getBacklogItems());\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n}\r\n\r\nexport const removeTask = (id) => dispatch => {\r\n    dispatch(setBacklogLoading());\r\n    axios.delete(\"api/task\", {\r\n        params: { id: id }\r\n    })\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BACKLOG_ITEMS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_BACKLOG_ITEMS,\r\n                payload: {}\r\n            })\r\n        });\r\n};\r\n\r\nexport const orderBacklogItems = (sortedItems) => dispatch => {\r\n    dispatch(setBacklogLoading());\r\n    axios.post(\"api/task/sortedbacklog\", sortedItems)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BACKLOG_ITEMS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_BACKLOG_ITEMS,\r\n                payload: {}\r\n            })\r\n        );\r\n};\r\n\r\nexport const toggleModal = () => {\r\n    return {\r\n        type: TOGGLE_MODAL\r\n    }\r\n}\r\n\r\nexport const setBacklogLoading = () => {\r\n    return {\r\n        type: BACKLOG_LOADING\r\n    }\r\n}\r\n\r\nexport const clearBacklog = () => {\r\n    return {\r\n        type: CLEAR_BACKLOG\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from './actions/authActions';\r\nimport { clearBacklog } from './actions/backlogActions';\r\n\r\nclass NavBar extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.clearBacklog();\r\n    this.props.logoutUser();\r\n    window.location.href = '/';\r\n  }\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n    const authLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          {/* <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/backlog\">Backlog</NavLink>\r\n          </li> */}\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/currentSprint\">Current Sprint</NavLink>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/profile\">{user.sub}</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a href=\"\" onClick={this.onLogoutClick} className=\"nav-link\" to=\"/login\">\r\n              <span className=\"oi oi-account-logout\"></span>{' '}Logout\r\n          </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userLinks = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/register\">Sign Up</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n    \r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">Scrum Manager</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          {isAuthenticated ? authLinks : userLinks}\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser, clearBacklog })(NavBar);\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n    Copyright &copy; {new Date().getFullYear()} Scrum Manager\r\n  </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","const isEmpty = (value) => \r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n    ","import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from '../validation/is-Empty';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type){       \r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS } from '../actions/types';\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type){       \r\n        case GET_ERRORS: \r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_BACKLOG_ITEMS, BACKLOG_LOADING, CLEAR_BACKLOG, TOGGLE_MODAL } from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: null,\r\n    loading: false,\r\n    modal: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case BACKLOG_LOADING:\r\n            return {\r\n                ...state,\r\n                items: [],\r\n                loading: true\r\n            }\r\n        case GET_BACKLOG_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_BACKLOG:\r\n            return {\r\n                ...state,\r\n                items: null\r\n            }\r\n        case TOGGLE_MODAL:\r\n            return {\r\n                ...state,\r\n                modal: !state.modal\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PRIORITIES, GET_EFFORTS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    priorities: null,\r\n    efforts: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {      \r\n        case  GET_PRIORITIES:\r\n            return {\r\n                ...state,\r\n                priorities: action.payload\r\n            }\r\n        case  GET_EFFORTS:\r\n            return {\r\n                ...state,\r\n                efforts: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport dictionaryReducer from './dictionaryReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n    backlog: backlogReducer,\r\n    dics: dictionaryReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    compose(applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport default store;","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n    id,\r\n    name,\r\n    placeholder,\r\n    value,\r\n    label,\r\n    error,\r\n    info,\r\n    type,\r\n    onChange,\r\n    disabled\r\n    \r\n}) => {\r\n    return (\r\n        <div>\r\n             <label \r\n                htmlFor={id} \r\n                className=\"sr-only\">{label}\r\n            </label>\r\n            <input \r\n                type={type} \r\n                id={id} \r\n                name={name}\r\n                onChange={onChange} \r\n                value={value} \r\n                className={classnames(\"form-control\", {\r\n                    'is-invalid': error\r\n                })} \r\n                placeholder={placeholder} \r\n            />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && (<div className=\"invalid-feedback\">{error}</div>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    disabled: PropTypes.string\r\n} \r\n\r\nTextFieldGroup.defaultProps = {\r\n    type: 'text',\r\n}\r\n    \r\nexport default TextFieldGroup;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from './actions/authActions';\r\nimport TextFieldGroup from './TextFieldGroup';\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(user);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"landing landing-background-login\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"form-main text-center\">\r\n              <form noValidate className=\"form-signin\" onSubmit={this.handleSubmit.bind(this)}>\r\n                <img className=\"mb-4\" src=\"dist/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                <TextFieldGroup\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.username}\r\n                  placeholder=\"Name\"\r\n                  error={errors.username}\r\n                />\r\n                <TextFieldGroup\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.password}\r\n                  placeholder=\"Password\"\r\n                  error={errors.password}\r\n                />\r\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n              </form>\r\n            </div></div></div></div>\r\n    )\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(LoginForm);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from './actions/authActions';\r\nimport TextFieldGroup from './TextFieldGroup';\r\n\r\nclass RegisterForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.auth.isAuthenticated) {\r\n          this.props.history.push('/backlog');\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    }  \r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"landing landing-background-register\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"form-main text-center\">\r\n                            <form noValidate className=\"form-signin\" onSubmit={this.handleSubmit}>\r\n                                <img className=\"mb-4\" src=\"dist/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n                                <h1 className=\"h3 mb-3 font-weight-normal\">Please sign up</h1>\r\n                                <TextFieldGroup \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    onChange={this.handleChange} \r\n                                    value={this.state.username} \r\n                                    placeholder=\"Name\" \r\n                                    error={errors.username}                                    \r\n                                />\r\n                                <TextFieldGroup \r\n                                    type=\"email\" \r\n                                    id=\"email\" \r\n                                    onChange={this.handleChange} \r\n                                    value={this.state.email} \r\n                                    placeholder=\"Email\" \r\n                                    error={errors.email}                                    \r\n                                />\r\n                                <TextFieldGroup \r\n                                    type=\"password\" \r\n                                    id=\"password\" \r\n                                    onChange={this.handleChange} \r\n                                    value={this.state.password} \r\n                                    placeholder=\"Password\" \r\n                                    error={errors.password}                                    \r\n                                />\r\n                                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign up</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(RegisterForm));","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push('/backlog');\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing landing-background-home\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Scrum Manager\r\n            </h1>\r\n                <p className=\"lead\">Great and free tool for developers to smart manage their work</p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">Sign Up</Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">Login</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ItemComponent extends Component {\r\n\r\n    onButtonClick = (id) => {\r\n        const { onDeleteItem } = this.props;\r\n        onDeleteItem(parseInt(id));\r\n    }\r\n    render() {\r\n        const { index, value, id } = this.props;\r\n        return (\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-light\">\r\n                {value}\r\n                <span className=\"badge badge-primary badge-pill\">{index}</span>\r\n\r\n                <div>\r\n                    <button onClick={() => this.onButtonClick(id)} type=\"button\" className=\"btn btn-outline-info btn-sm\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\r\nimport ItemComponent from './ItemComponent';\r\nimport '.././App.css'\r\n\r\nconst SortableItem = SortableElement(({ index, value, onDeleteItem, id }) => <ItemComponent index={index} value={value} onDeleteItem={onDeleteItem} id={id} />);\r\nconst SortableList = SortableContainer(({ items, onDeleteItem }) => {\r\n    return (\r\n\r\n        <ul className=\"list-group\">\r\n            {items.map((value, index) => (\r\n                <SortableItem key={`item-${index}`} index={index} value={value.taskname} onDeleteItem={onDeleteItem} id={value.id} />\r\n            ))}\r\n        </ul>\r\n\r\n    );\r\n});\r\n\r\nclass BacklogSortable extends Component {\r\n    onDeleteItem = (id) => {\r\n        this.props.removeBacklogTask(id);\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const { items } = this.props;\r\n        const sortedItems = arrayMove(items.tasks, oldIndex, newIndex);\r\n        this.props.sortBacklogItems(sortedItems);\r\n    };\r\n\r\n    render() {\r\n        const { items } = this.props;\r\n        return <SortableList\r\n            items={items.tasks}\r\n            onSortEnd={this.onSortEnd}\r\n            onDeleteItem={this.onDeleteItem} />;\r\n\r\n    }\r\n}\r\n\r\nexport default BacklogSortable;\r\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createTask, toggleModal } from '../actions/backlogActions';\r\nimport { getEffortsAndPriorities } from '../actions/dictionaryActions';\r\n\r\nclass CreateTask extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { taskname: '', description: '', effort: -1, priority: -1, username: '' };\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleModal();\r\n        const { priorities, efforts } = this.props.dics;\r\n        if(priorities === null && efforts === null){\r\n            this.props.getEffortsAndPriorities();\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let newTask = {\r\n            taskname: this.state.taskname,\r\n            description: this.state.description,\r\n            effortId: +this.state.effort,\r\n            priorityId: +this.state.priority,\r\n            username: this.state.username,\r\n        }\r\n        console.log(newTask)\r\n        this.props.createTask(newTask);\r\n        this.setState({ taskname: '', description: '', effort: -1, priority: -1, username: '' });\r\n    }\r\n\r\n    render() {\r\n        const { modal } = this.props.backlog;\r\n        const { priorities, efforts } = this.props.dics;\r\n        let ddlPriorities = null;\r\n        if(priorities !== null){\r\n            ddlPriorities = priorities.priorities.map((priority) => \r\n            <option key={priority.priorityId} value={priority.priorityId}>{priority.priorityName}</option>\r\n            );\r\n        }\r\n\r\n        let ddlEfforts = null;\r\n        if(efforts !== null){\r\n            ddlEfforts = efforts.efforts.map((effort) => \r\n            <option key={effort.effortId} value={effort.effortId}>{effort.effortName}</option>\r\n            );\r\n        }\r\n       \r\n        return (\r\n            <div >\r\n                <div className=\"container\">\r\n                    <Button color=\"success\" style={{ marginTop: \"-70px\", float: \"right\" }} onClick={this.toggle} >Create task</Button>\r\n                </div>\r\n                <Modal isOpen={modal}>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <ModalHeader>New task for backlog</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Task name:</label>\r\n                                    <input name=\"taskname\" type=\"text\" value={this.state.taskname} onChange={this.handleChange} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Description</label>\r\n                                    <input name=\"description\" type=\"text\" value={this.state.description} onChange={this.handleChange} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Effort:</label>\r\n                                    <select className=\"custom-select mr-sm-2\" name=\"effort\" onChange={this.handleChange} disabled={efforts === null} >\r\n                                        <option key={-1} value={-1}>Choose...</option>\r\n                                        {ddlEfforts}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Priority:</label>\r\n                                    <select className=\"custom-select mr-sm-2\" name=\"priority\" onChange={this.handleChange} disabled={priorities === null} >\r\n                                        <option key={-1} value={-1}>Choose...</option>\r\n                                        {ddlPriorities}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Username:</label>\r\n                                    <input name=\"username\" type=\"text\" value={this.username} onChange={this.handleChange} className=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <input type=\"submit\" value=\"Submit\" color=\"primary\" className=\"btn btn-primary\" />\r\n                            <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nCreateTask.propTypes = {\r\n    createTask: PropTypes.func.isRequired,\r\n    toggleModal: PropTypes.func.isRequired,\r\n    getEffortsAndPriorities: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    backlog: state.backlog,\r\n    dics: state.dics\r\n});\r\n\r\nexport default connect(mapStateToProps, { createTask, toggleModal, getEffortsAndPriorities })(CreateTask);","import axios from 'axios';\r\nimport { GET_PRIORITIES, GET_EFFORTS } from './types';\r\n\r\nexport const getEffortsAndPriorities = () => dispatch => {\r\n    axios.get(\"api/list/getefforts\")\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EFFORTS,\r\n                payload: res.data\r\n            });\r\n            axios.get(\"api/list/getpriorities\")\r\n                .then(res => {\r\n                    dispatch({\r\n                        type: GET_PRIORITIES,\r\n                        payload: res.data\r\n                    })\r\n                })\r\n                .catch(err =>\r\n                    dispatch({\r\n                        type: GET_PRIORITIES,\r\n                        payload: {}\r\n                    })\r\n                );\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_EFFORTS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getBacklogItems, orderBacklogItems, removeTask } from '../actions/backlogActions';\r\nimport BacklogSortable from './BacklogSortable';\r\nimport CreateTask from './CreateTask';\r\n\r\nclass BacklogComponent extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n        this.props.getBacklogItems();\r\n    }\r\n\r\n    sortBacklogItems = (sortdItems) => {\r\n        this.props.orderBacklogItems(sortdItems);\r\n    }\r\n\r\n    removeBacklogTask = (id) => {\r\n        this.props.removeTask(id);\r\n    }\r\n\r\n    render() {\r\n        const { items, loading } = this.props.backlog;\r\n        return (\r\n            <div className=\"landing landing-background-backlog\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <CreateTask />\r\n                    <h1 className=\"centerText\" style={{ marginTop: \"-50px\" }}>Main Backlog</h1>\r\n                    <div className=\"container\">{items != null && items.tasks != null && !loading ?\r\n                        (\r\n                            <div>{items.tasks.length > 0 ? (\r\n                                <BacklogSortable\r\n                                    items={items}\r\n                                    sortBacklogItems={this.sortBacklogItems}\r\n                                    removeBacklogTask={this.removeBacklogTask}\r\n                                />\r\n                            ) : (\r\n                                    <div>\r\n                                        <br />\r\n                                        <h5 className=\"centerText\">There is no items on the backlog yet, create first Task!</h5>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"loader\"></div>\r\n                        )}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBacklogComponent.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklogItems: PropTypes.func.isRequired,\r\n    orderBacklogItems: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    backlog: state.backlog,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklogItems, orderBacklogItems, removeTask })(BacklogComponent);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CurrentSprint extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing landing-background-currentSprint\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1>Here will be board with current task for users</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCurrentSprint.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(CurrentSprint);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Profile extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        const { user } = this.props.auth;\r\n\r\n        return (\r\n            <div className=\"landing landing-background-profile\">\r\n                <div className=\"dark-overlay landing-inner text-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1>User info</h1>\r\n                                <h3>{user.sub}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(Profile);","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport Footer from './Footer';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport { setCurrentUser, logoutUser } from './actions/authActions';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport LoginForm from './LoginForm';\r\nimport RegisterForm from './RegisterForm';\r\nimport Home from './Home';\r\nimport Backlog from './backlogComponent/Backlog';\r\nimport CurrentSprint from './CurrentSprint';\r\nimport Profile from './Profile';\r\nimport './App.css';\r\n\r\nif(localStorage.smToken) {\r\n  setAuthToken(localStorage.smToken);\r\n  const decoded = jwt_decode(localStorage.smToken);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  const currentTime = Date.now() / 1000;\r\n  if(decoded.exp < currentTime){\r\n    store.dispatch(logoutUser());\r\n    window.location.href = '/login';\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={ store } >\r\n        <BrowserRouter>\r\n        <div>\r\n          <NavBar/>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/register\" component={RegisterForm} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n          <Route exact path=\"/backlog\" component={Backlog} />\r\n          <Route exact path=\"/currentSprint\" component={CurrentSprint} />\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}